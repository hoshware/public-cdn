import { writeFile } from 'fs/promises';
import { fileURLToPath } from 'url';
import path from 'path';

const TOP_CITIES = {
  alabama: [
    'Birmingham',
    'Huntsville',
    'Montgomery',
    'Mobile',
    'Tuscaloosa',
    'Hoover',
    'Dothan',
    'Auburn',
    'Decatur',
    'Madison',
  ],
  alaska: [
    'Anchorage',
    'Fairbanks',
    'Juneau',
    'Sitka',
    'Ketchikan',
    'Wasilla',
    'Kenai',
    'Kodiak',
    'Bethel',
    'Palmer',
  ],
  arizona: [
    'Phoenix',
    'Tucson',
    'Mesa',
    'Chandler',
    'Scottsdale',
    'Glendale',
    'Gilbert',
    'Tempe',
    'Peoria',
    'Surprise',
  ],
  arkansas: [
    'Little Rock',
    'Fort Smith',
    'Fayetteville',
    'Springdale',
    'Jonesboro',
    'North Little Rock',
    'Conway',
    'Rogers',
    'Pine Bluff',
    'Bentonville',
  ],
  california: [
    'Los Angeles',
    'San Diego',
    'San Jose',
    'San Francisco',
    'Fresno',
    'Sacramento',
    'Long Beach',
    'Oakland',
    'Bakersfield',
    'Anaheim',
  ],
  colorado: [
    'Denver',
    'Colorado Springs',
    'Aurora',
    'Fort Collins',
    'Lakewood',
    'Thornton',
    'Arvada',
    'Westminster',
    'Pueblo',
    'Centennial',
  ],
  connecticut: [
    'Bridgeport',
    'New Haven',
    'Stamford',
    'Hartford',
    'Waterbury',
    'Norwalk',
    'Danbury',
    'New Britain',
    'Meriden',
    'Bristol',
  ],
  delaware: [
    'Wilmington',
    'Dover',
    'Newark',
    'Middletown',
    'Smyrna',
    'Milford',
    'Seaford',
    'Georgetown',
    'Elsmere',
    'New Castle',
  ],
  district_of_columbia: ['Washington'],
  florida: [
    'Jacksonville',
    'Miami',
    'Tampa',
    'Orlando',
    'St. Petersburg',
    'Hialeah',
    'Tallahassee',
    'Port St. Lucie',
    'Cape Coral',
    'Fort Lauderdale',
  ],
  georgia: [
    'Atlanta',
    'Augusta',
    'Columbus',
    'Macon',
    'Savannah',
    'Athens',
    'Sandy Springs',
    'Roswell',
    'Johns Creek',
    'Warner Robins',
  ],
  hawaii: [
    'Honolulu',
    'East Honolulu',
    'Pearl City',
    'Hilo',
    'Kailua',
    'Waipahu',
    'Kaneohe',
    'Mililani Town',
    'Kahului',
    'Ewa Gentry',
  ],
  idaho: [
    'Boise',
    'Meridian',
    'Nampa',
    'Idaho Falls',
    'Caldwell',
    'Pocatello',
    "Coeur d'Alene",
    'Twin Falls',
    'Lewiston',
    'Post Falls',
  ],
  illinois: [
    'Chicago',
    'Aurora',
    'Naperville',
    'Joliet',
    'Rockford',
    'Springfield',
    'Elgin',
    'Peoria',
    'Champaign',
    'Waukegan',
  ],
  indiana: [
    'Indianapolis',
    'Fort Wayne',
    'Evansville',
    'South Bend',
    'Carmel',
    'Bloomington',
    'Fishers',
    'Hammond',
    'Gary',
    'Lafayette',
  ],
  iowa: [
    'Des Moines',
    'Cedar Rapids',
    'Davenport',
    'Sioux City',
    'Iowa City',
    'Waterloo',
    'Ames',
    'West Des Moines',
    'Council Bluffs',
    'Ankeny',
  ],
  kansas: [
    'Wichita',
    'Overland Park',
    'Kansas City',
    'Olathe',
    'Topeka',
    'Lawrence',
    'Shawnee',
    'Manhattan',
    'Lenexa',
    'Salina',
  ],
  kentucky: [
    'Louisville',
    'Lexington',
    'Bowling Green',
    'Owensboro',
    'Covington',
    'Richmond',
    'Georgetown',
    'Florence',
    'Hopkinsville',
    'Nicholasville',
  ],
  louisiana: [
    'New Orleans',
    'Baton Rouge',
    'Shreveport',
    'Lafayette',
    'Lake Charles',
    'Kenner',
    'Bossier City',
    'Monroe',
    'Alexandria',
    'Houma',
  ],
  maine: [
    'Portland',
    'Lewiston',
    'Bangor',
    'South Portland',
    'Auburn',
    'Biddeford',
    'Sanford',
    'Saco',
    'Westbrook',
    'Augusta',
  ],
  maryland: [
    'Baltimore',
    'Columbia',
    'Germantown',
    'Silver Spring',
    'Waldorf',
    'Ellicott City',
    'Frederick',
    'Glen Burnie',
    'Gaithersburg',
    'Rockville',
  ],
  massachusetts: [
    'Boston',
    'Worcester',
    'Springfield',
    'Cambridge',
    'Lowell',
    'Brockton',
    'New Bedford',
    'Quincy',
    'Lynn',
    'Fall River',
  ],
  michigan: [
    'Detroit',
    'Grand Rapids',
    'Warren',
    'Sterling Heights',
    'Lansing',
    'Ann Arbor',
    'Flint',
    'Dearborn',
    'Livonia',
    'Westland',
  ],
  minnesota: [
    'Minneapolis',
    'Saint Paul',
    'Rochester',
    'Bloomington',
    'Duluth',
    'Brooklyn Park',
    'Plymouth',
    'Maple Grove',
    'Woodbury',
    'St. Cloud',
  ],
  mississippi: [
    'Jackson',
    'Gulfport',
    'Southaven',
    'Hattiesburg',
    'Biloxi',
    'Meridian',
    'Tupelo',
    'Olive Branch',
    'Greenville',
    'Horn Lake',
  ],
  missouri: [
    'Kansas City',
    'St. Louis',
    'Springfield',
    'Columbia',
    'Independence',
    "Lee's Summit",
    "O'Fallon",
    'St. Joseph',
    'St. Charles',
    'Blue Springs',
  ],
  montana: [
    'Billings',
    'Missoula',
    'Great Falls',
    'Bozeman',
    'Butte',
    'Helena',
    'Kalispell',
    'Havre',
    'Anaconda',
    'Miles City',
  ],
  nebraska: [
    'Omaha',
    'Lincoln',
    'Bellevue',
    'Grand Island',
    'Kearney',
    'Fremont',
    'Hastings',
    'Norfolk',
    'North Platte',
    'Columbus',
  ],
  nevada: [
    'Las Vegas',
    'Henderson',
    'Reno',
    'North Las Vegas',
    'Sparks',
    'Carson City',
    'Fernley',
    'Elko',
    'Mesquite',
    'Boulder City',
  ],
  new_hampshire: [
    'Manchester',
    'Nashua',
    'Concord',
    'Derry',
    'Dover',
    'Rochester',
    'Salem',
    'Merrimack',
    'Hudson',
    'Londonderry',
  ],
  new_jersey: [
    'Newark',
    'Jersey City',
    'Paterson',
    'Elizabeth',
    'Edison',
    'Woodbridge',
    'Lakewood',
    'Toms River',
    'Hamilton',
    'Trenton',
  ],
  new_mexico: [
    'Albuquerque',
    'Las Cruces',
    'Rio Rancho',
    'Santa Fe',
    'Roswell',
    'Farmington',
    'Clovis',
    'Hobbs',
    'Alamogordo',
    'Carlsbad',
  ],
  new_york: [
    'New York City',
    'Buffalo',
    'Rochester',
    'Yonkers',
    'Syracuse',
    'Albany',
    'New Rochelle',
    'Mount Vernon',
    'Schenectady',
    'Utica',
  ],
  north_carolina: [
    'Charlotte',
    'Raleigh',
    'Greensboro',
    'Durham',
    'Winston-Salem',
    'Fayetteville',
    'Cary',
    'Wilmington',
    'High Point',
    'Concord',
  ],
  north_dakota: [
    'Fargo',
    'Bismarck',
    'Grand Forks',
    'Minot',
    'West Fargo',
    'Williston',
    'Dickinson',
    'Mandan',
    'Jamestown',
    'Wahpeton',
  ],
  ohio: [
    'Columbus',
    'Cleveland',
    'Cincinnati',
    'Toledo',
    'Akron',
    'Dayton',
    'Parma',
    'Canton',
    'Youngstown',
    'Lorain',
  ],
  oklahoma: [
    'Oklahoma City',
    'Tulsa',
    'Norman',
    'Broken Arrow',
    'Edmond',
    'Lawton',
    'Moore',
    'Midwest City',
    'Enid',
    'Stillwater',
  ],
  oregon: [
    'Portland',
    'Eugene',
    'Salem',
    'Gresham',
    'Hillsboro',
    'Beaverton',
    'Bend',
    'Medford',
    'Springfield',
    'Corvallis',
  ],
  pennsylvania: [
    'Philadelphia',
    'Pittsburgh',
    'Allentown',
    'Erie',
    'Reading',
    'Scranton',
    'Bethlehem',
    'Lancaster',
    'Harrisburg',
    'York',
  ],
  rhode_island: [
    'Providence',
    'Cranston',
    'Warwick',
    'Pawtucket',
    'East Providence',
    'Woonsocket',
    'Coventry',
    'Cumberland',
    'North Providence',
    'South Kingstown',
  ],
  south_carolina: [
    'Charleston',
    'Columbia',
    'North Charleston',
    'Mount Pleasant',
    'Rock Hill',
    'Greenville',
    'Summerville',
    'Sumter',
    'Goose Creek',
    'Hilton Head Island',
  ],
  south_dakota: [
    'Sioux Falls',
    'Rapid City',
    'Aberdeen',
    'Brookings',
    'Watertown',
    'Mitchell',
    'Yankton',
    'Pierre',
    'Huron',
    'Spearfish',
  ],
  tennessee: [
    'Nashville',
    'Memphis',
    'Knoxville',
    'Chattanooga',
    'Clarksville',
    'Murfreesboro',
    'Franklin',
    'Jackson',
    'Johnson City',
    'Bartlett',
  ],
  texas: [
    'Houston',
    'San Antonio',
    'Dallas',
    'Austin',
    'Fort Worth',
    'El Paso',
    'Arlington',
    'Corpus Christi',
    'Plano',
    'Laredo',
  ],
  utah: [
    'Salt Lake City',
    'West Valley City',
    'Provo',
    'West Jordan',
    'Orem',
    'Sandy',
    'Ogden',
    'St. George',
    'Layton',
    'South Jordan',
  ],
  vermont: [
    'Burlington',
    'South Burlington',
    'Rutland',
    'Barre',
    'Montpelier',
    'Winooski',
    'St. Albans',
    'Newport',
    'Vergennes',
    'Essex Junction',
  ],
  virginia: [
    'Virginia Beach',
    'Norfolk',
    'Chesapeake',
    'Richmond',
    'Newport News',
    'Alexandria',
    'Hampton',
    'Roanoke',
    'Portsmouth',
    'Suffolk',
  ],
  washington: [
    'Seattle',
    'Spokane',
    'Tacoma',
    'Vancouver',
    'Bellevue',
    'Kent',
    'Everett',
    'Renton',
    'Spokane Valley',
    'Federal Way',
  ],
  west_virginia: [
    'Charleston',
    'Huntington',
    'Morgantown',
    'Parkersburg',
    'Wheeling',
    'Weirton',
    'Fairmont',
    'Martinsburg',
    'Beckley',
    'Clarksburg',
  ],
  wisconsin: [
    'Milwaukee',
    'Madison',
    'Green Bay',
    'Kenosha',
    'Racine',
    'Appleton',
    'Waukesha',
    'Eau Claire',
    'Oshkosh',
    'Janesville',
  ],
  wyoming: [
    'Cheyenne',
    'Casper',
    'Laramie',
    'Gillette',
    'Rock Springs',
    'Sheridan',
    'Green River',
    'Evanston',
    'Riverton',
    'Jackson',
  ],
};

const apiKey = process.env.API_KEY;

const locateCity = async (city, state) => {
  const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${city},+${state}&key=${apiKey}`;
  const response = await fetch(url, {
    headers: {
      referer: 'https://dogparkly.com',
    },
  });

  const json = await response.json();

  if (json.results && json.results.length > 0) {
    const first = json.results[0];

    const { lat, lng } = first.geometry.location;
    return {
      lat,
      lng,
    };
  }
  return null;
};

const toSnakeCase = (subject) => subject.toLowerCase().replace(/\s/g, '_');

const getLocationsForStatesCities = async () => {
  let results = {};

  for (const state of Object.keys(TOP_CITIES)) {
    results[state] = {};

    const cities = TOP_CITIES[state];

    for (const city of cities) {
      const location = await locateCity(city, state);

      results[state][toSnakeCase(city)] = location;
    }
  }
  return results;
};

const pullToJson = async () => {
  const results = await getLocationsForStatesCities();

  // Use import.meta.url to get the current file path
  const __filename = fileURLToPath(import.meta.url);
  const __dirname = path.dirname(__filename);

  const filePath = path.resolve(__dirname, 'locations.json');
  await writeFile(filePath, JSON.stringify(results, null, 2));
  console.log(`Results written to ${filePath}`);
};

console.log({
  API_KEY: process.env.API_KEY,
});
